# SPDX-FileCopyrightText: 2022 Felix Gruber <felgru@posteo.net>
#
# SPDX-License-Identifier: GPL-3.0-or-later

import os
from pathlib import Path
from typing import Iterable, Protocol, Union


class AddFileTransaction(Protocol):
    def add_files(self, files: Iterable[Union[Path, str]]) -> None: ...


def write_include_files(ledger_root: Path, git: AddFileTransaction) -> None:
    ledger_name = 'journal.hledger'
    ledger_files = []
    for(dirpath, dirnames, filenames) in os.walk(ledger_root):
        if Path(dirpath) == ledger_root:
            for i in reversed(range(len(dirnames))):
                if not dirnames[i].isnumeric():
                    dirnames.pop(i)
        dirnames.sort()
        ledger = Path(dirpath, ledger_name)
        with open(ledger, 'w') as f:
            print("; autogenerated file, do not edit\n", file=f)
            for d in dirnames:
                print('include', os.path.join(d, ledger_name), file=f)
            try:
                # prevent infinite loop
                filenames.remove(ledger_name)
            except ValueError:
                pass
            filenames = sorted(f for f in filenames if f.endswith('.hledger'))
            for filename in filenames:
                print('include', filename, file=f)
        ledger_files.append(ledger)
    git.add_files(ledger_files)
